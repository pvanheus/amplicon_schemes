# generated by datamodel-codegen:
#   filename:  manifest_schema.json
#   timestamp: 2022-11-15T18:35:26+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class Version(BaseModel):
    version: str
    repository: str = Field(
        ...,
        description='Link to the directory containing the scheme. This directory should follow the PHA4GE standard for schemes',
    )


class Scheme(BaseModel):
    name: str = Field(..., description='The common name of the scheme')
    aliases: Optional[List[str]] = Field(
        None, description='Aliases for the scheme name'
    )
    organism: str = Field(
        ...,
        description='The organism that this primer scheme refers to, e.g. SARS-CoV-2',
    )
    organism_aliases: Optional[List[str]] = Field(
        None, description='Aliases for organism name'
    )
    latest_version: str = Field(
        ...,
        description='The identifier (typically a number) of the latest released version of the scheme',
    )
    versions: List[Version] = Field(..., min_items=1, unique_items=True)


class PrimerSchemeManifest(BaseModel):
    metadata: str = Field(
        ..., description='Metadata describing the contents of the manifest'
    )
    repository: str = Field(
        ...,
        description='A URI describing the location of the live, updatable version of the schema',
    )
    latest_doi: str = Field(
        ...,
        description='The Digital Object Identifier of the latest version of the manifest',
    )
    license: str = Field(
        ...,
        description='The license under which the manifest is released. Should be an identifier in the SPDX license list',
    )
    schemes: List[Scheme] = Field(
        ...,
        description='The list of schemes in this manifest',
        min_items=1,
        unique_items=True,
    )
